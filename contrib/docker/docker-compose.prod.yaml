version: "3.3"
services:
  reverse-proxy:
    image: traefik:v2.3
    command:
      - --log.level=WARN
      #- --api.insecure=true
      - --providers.docker
      - --entryPoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entryPoints.websecure.address=:443
      - --certificatesresolvers.myresolver.acme.email=d.negrier@thecodingmachine.com
      - --certificatesresolvers.myresolver.acme.storage=/le/acme.json
      # used during the challenge
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
    ports:
      - "80:80"
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      #- "8080:8080"
    depends_on:
      - pusher
      - front
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/le
    restart: unless-stopped


  front:
    build:
      context: .
      dockerfile: front/Dockerfile
    #image: thecodingmachine/workadventure-front:master
    environment:
      DEBUG_MODE: "$DEBUG_MODE"
      JITSI_URL: $JITSI_URL
      JITSI_PRIVATE_MODE: "$JITSI_PRIVATE_MODE"
      API_URL: pusher.${DOMAIN}
      STUN_SERVER: "$STUN_SERVER"
      TURN_SERVER: "${TURN_SERVER}"
      TURN_USER: "${TURN_USER}"
      TURN_PASSWORD: "${TURN_PASSWORD}"
      START_ROOM_URL: "${START_ROOM_URL}"
      UPLOADER_URL: "uploader.$DOMAIN"
    labels:
      - "traefik.http.routers.front.rule=Host(`play.$DOMAIN`)"
      - "traefik.http.routers.front.entryPoints=websecure"
      - "traefik.http.services.front.loadbalancer.server.port=80"
      - "traefik.http.routers.front.tls=true"
      - "traefik.http.routers.front.tls.certresolver=myresolver"
    restart: unless-stopped

  pusher:
    build:
      context: .
      dockerfile: pusher/Dockerfile
    #image: thecodingmachine/workadventure-pusher:master
    command: yarn run runprod
    environment:
      SECRET_JITSI_KEY: "$SECRET_JITSI_KEY"
      SECRET_KEY: yourSecretKey
      API_URL: back:50051
      JITSI_URL: $JITSI_URL
      JITSI_ISS: $JITSI_ISS
    labels:
      - "traefik.http.routers.pusher.rule=Host(`pusher.$DOMAIN`)"
      - "traefik.http.routers.pusher.entryPoints=websecure"
      - "traefik.http.services.pusher.loadbalancer.server.port=8080"
      - "traefik.http.routers.pusher.tls=true"
      - "traefik.http.routers.pusher.tls.certresolver=myresolver"
    restart: unless-stopped

  back:
    build:
      context: .
      dockerfile: back/Dockerfile
    #image: thecodingmachine/workadventure-back:master
    command: yarn run runprod
    environment:
      SECRET_JITSI_KEY: "$SECRET_JITSI_KEY"
      ADMIN_API_TOKEN: "$ADMIN_API_TOKEN"
      ADMIN_API_URL: "$ADMIN_API_URL"
      JITSI_URL: $JITSI_URL
      JITSI_ISS: $JITSI_ISS
      TURN_STATIC_AUTH_SECRET: "$TURN_STATIC_AUTH_SECRET"
    labels:
      - "traefik.http.routers.back.rule=Host(`api.$DOMAIN`)"
      - "traefik.http.routers.back.entryPoints=websecure"
      - "traefik.http.services.back.loadbalancer.server.port=8080"
      - "traefik.http.routers.back.tls=true"
      - "traefik.http.routers.back.tls.certresolver=myresolver"
    restart: unless-stopped

  uploader:
    build:
      context: .
      dockerfile: uploader/Dockerfile
    #image: thecodingmachine/workadventure-uploader:master
    environment:
      DEBUG: "*"
    labels:
      - "traefik.http.routers.uploader.rule=Host(`uploader.$DOMAIN`)"
      - "traefik.http.routers.uploader.entryPoints=websecure"
      - "traefik.http.services.uploader.loadbalancer.server.port=8080"
      - "traefik.http.routers.uploader.tls=true"
      - "traefik.http.routers.uploader.tls.certresolver=myresolver"
    restart: unless-stopped

  coturn:
    image: coturn/coturn:4.5.2
    command:
      - turnserver
      - --log-file=stdout

      - --relay-ip=$TURN_EXTERNAL_IP
      - --external-ip=$TURN_EXTERNAL_IP

      - --listening-port=3478
      - --min-port=10000
      - --max-port=11010
      - --tls-listening-port=5349
      - --listening-ip=0.0.0.0
      - --realm=coturn.$DOMAIN
      - --server-name=coturn.$DOMAIN

      # Enable Coturn "REST API" to validate temporary passwords.
      - --use-auth-secret
      - --static-auth-secret=$TURN_STATIC_AUTH_SECRET
    network_mode: host
    restart: unless-stopped
